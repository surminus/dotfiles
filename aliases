# vi: ft=bash

###
### Vim
###
alias v=vim
alias bim=vim

function vx() {
  vim $(fzf)
}
###
### End
###


###
### Git
###
function git_default_branch() {
  git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'
}

# git checkout and pull
function gcm() {
  git switch $(git_default_branch) && git pull
}

# Automatic rebase with default branch
function grb() {
  gcm && git switch - && git rebase $(git_default_branch)
}

# Interactive branch selector
function gsl() {
  git switch $(git for-each-ref refs/heads --format='%(refname)' --sort='committerdate' | sed 's/refs\/heads\///g' | tac | fzf --preview='git log --color=always --oneline {} |head -20')
}

# Interactive commit sha selector, automatically copies into paste buffer
function glo() {
  git log --oneline --format=format:%H | fzf --preview='git show --color=always {}'
}

# Interactive fixup selector
function gfu() {
  git fixup $(glo)
}

# Move to root of repo
function grt() {
  cd $(git rev-parse --show-toplevel)
}

alias gco="git checkout"
alias gsw="git switch"
###
### End
###


###
### Bat
###
if $(which batcat >/dev/null 2>&1); then
  alias cat='batcat -p --paging=never'

  if $(which fzf >/dev/null 2>&1); then
    alias fzf="fzf --preview 'batcat --style=numbers --color=always --line-range :500 {}'"
  fi
fi

if $(which bat >/dev/null 2>&1); then
  alias cat='bat -p --paging=never'

  if $(which fzf >/dev/null 2>&1); then
    alias fzf="fzf --preview 'bat --style=numbers --color=always --line-range :500 {}'"
  fi
fi
###
### End
###


###
### Misc
###
function update-vim-plugins() {
  vim -c 'call dein#update()' -c 'qa!'
  mkdir -p ~/.vim && touch ~/.vim/plugins.updated
}

# Reload previously loaded shell
alias reload_shell="exec $SHELL"

# Shrug
alias shrug="echo '¯\_(ツ)_/¯'"

# Ignore snaps
alias df='df -x"squashfs"'

# Bundler
alias bi="bundle install"

# Replace rpl with sd in string mode
alias rpl="sd -s"

# Terraform
alias tf="terraform"
###
### End
###
